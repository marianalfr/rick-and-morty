{"version":3,"sources":["images/Rick-and-Morty-Portal.png","images/Logo.png","components/Header.js","components/Search.js","components/Emoji.js","components/Character.js","components/CharacterList.js","components/CharacterDetails.js","components/App.js","services/Api.js","index.js"],"names":["module","exports","Header","className","to","src","Logo","alt","Search","props","htmlFor","type","id","value","search","onChange","event","target","getSearch","Emoji","role","aria-label","label","aria-hidden","symbol","Character","character","key","image","name","species","propTypes","characters","PropTypes","array","CharacterList","filter","toLowerCase","includes","map","CharacterDetails","undefined","class","Portal","status","origin","episode","length","App","state","data","bind","renderCharacterDetails","fetch","then","response","json","setState","results","this","characterId","match","params","find","parseInt","exact","path","render","React","Component","ReactDOM","document","getElementById"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,mD,wCCA3CD,EAAOC,QAAU,IAA0B,kC,+LCY5BC,EARA,WACX,OACI,4BAAQC,UAAU,UACd,kBAAC,IAAD,CAAMC,GAAG,KAAI,yBAAKC,IAAKC,IAAMC,IAAI,2BCe9BC,EAnBA,SAAAC,GAOX,OACI,0BAAMN,UAAU,eACZ,2BAAOA,UAAU,qBAAqBO,QAAQ,UAA9C,qBACA,2BAAOP,UAAU,sBAAsBQ,KAAK,OAAOC,GAAG,SAASC,MAAOJ,EAAMK,OAAQC,SAR1E,SAAAC,GACd,IAAMH,EAAQG,EAAMC,OAAOJ,MAC3BJ,EAAMS,UAAUL,QCKTM,EAVD,SAAAV,GAAK,OACf,0BACIN,UAAU,QACViB,KAAK,MACLC,aAAYZ,EAAMa,MAAQb,EAAMa,MAAQ,GACxCC,cAAad,EAAMa,MAAQ,QAAU,QAEpCb,EAAMe,SCgBAC,EApBG,SAAAhB,GACd,OACI,kBAAC,IAAD,CAAML,GAAE,qBAAgBK,EAAMiB,UAAUd,KACpC,wBAAIT,UAAU,YAAYwB,IAAKlB,EAAMiB,UAAUd,IAC3C,yBAAKP,IAAKI,EAAMiB,UAAUE,MAAOrB,IAAKE,EAAMiB,UAAUG,OACtD,yBAAK1B,UAAU,kBACX,4BAAKM,EAAMiB,UAAUG,OAEzB,yBAAK1B,UAAU,qBACkB,UAA5BM,EAAMiB,UAAUI,QAAsB,kBAAC,EAAD,CAAON,OAAO,eAAKF,MAAM,UAAY,kBAAC,EAAD,CAAOE,OAAO,eAAKF,MAAM,c,gBCEzHG,EAAUM,UAAY,CAClBC,WAAYC,IAAUC,OAGXC,MAhBO,SAAA1B,GAClB,OACI,wBAAIN,UAAY,kBACXM,EAAMuB,WACNI,QAAO,SAAAV,GAAS,OAAIA,EAAUG,KAAKQ,cAAcC,SAAS7B,EAAMK,OAAOuB,kBACvEE,KAAI,SAAAb,GAAS,OACV,kBAAC,EAAD,CAAWA,UAAaA,S,wBCmCzBc,EAvCU,SAAA/B,GACrB,YAAuBgC,IAApBhC,EAAMiB,UAED,yBAAKvB,UAAU,aACX,2EACA,kBAAC,IAAD,CAAMC,GAAG,KACL,yBAAKsC,MAAM,WAAWrC,IAAKsC,IAAQpC,IAAI,WAM/C,yBAAKJ,UAAU,sBACX,yBAAKA,UAAU,gCACX,yBAAKE,IAAKI,EAAMiB,UAAUE,MAAOrB,IAAKE,EAAMiB,UAAUG,OACtD,yBAAK1B,UAAU,sCACf,4BAAKM,EAAMiB,UAAUG,MACjB,wBAAI1B,UAAU,eACV,uCAAwC,UAA3BM,EAAMiB,UAAUkB,OAAqB,kBAAC,EAAD,CAAOpB,OAAO,eAAKF,MAAM,UAAY,kBAAC,EAAD,CAAOE,OAAO,eAAKF,MAAM,UAChH,wCAA0C,UAA5Bb,EAAMiB,UAAUI,QAAsB,kBAAC,EAAD,CAAON,OAAO,eAAKF,MAAM,UAAY,kBAAC,EAAD,CAAOE,OAAO,eAAKF,MAAM,WAClH,uCAAab,EAAMiB,UAAUmB,OAAOhB,MACpC,yCAAepB,EAAMiB,UAAUoB,QAAQC,WAInD,wBAAI5C,UAAU,0BACV,4BAAI,kBAAC,IAAD,CAAMC,GAAE,qBAAgBK,EAAMiB,UAAUd,GAAK,IAAK,uBAAGT,UAAU,wBACnE,4BAAI,kBAAC,IAAD,CAAMC,GAAG,KAAI,yBAAKsC,MAAM,WAAWrC,IAAKsC,IAAQpC,IAAI,WACxD,4BAAI,kBAAC,IAAD,CAAMH,GAAE,qBAAgBK,EAAMiB,UAAUd,GAAK,IAAK,uBAAGT,UAAU,4BCsCxE6C,E,YA9Db,WAAYvC,GAAQ,IAAD,8BACjB,4CAAMA,KACDwC,MAAQ,CACXC,KAAM,GACNpC,OAAQ,IAEV,EAAKI,UAAY,EAAKA,UAAUiC,KAAf,gBACjB,EAAKC,uBAAyB,EAAKA,uBAAuBD,KAA5B,gBAPb,E,iFAUC,IAAD,OClBSE,MAFX,8CAE6BC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UDoBrEF,MAAK,SAAAJ,GACJ,EAAKO,SAAS,CACZP,KAAMA,EAAKQ,e,gCAKP7C,GACR8C,KAAKF,SAAS,CACZ3C,OAAQD,M,6CAIWJ,GACrB,IAAMmD,EAAcnD,EAAMoD,MAAMC,OAAOlD,GACjCc,EAAYiC,KAAKV,MAAMC,KAAKa,MAAK,SAAArC,GAAS,OAAIA,EAAUd,KAAOoD,SAASJ,MAC9E,OACE,kBAAC,EAAD,CAAkBlC,UAAWA,M,+BAK/B,OACE,yBAAKvB,UAAU,OACb,yBAAKA,UAAU,UACf,yBAAKA,UAAU,cACf,6BAASA,UAAU,gBACjB,kBAAC,EAAD,MACA,0BAAMA,UAAU,QACd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8D,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,CACEhD,UAAayC,KAAKzC,UAClBJ,OAAU6C,KAAKV,MAAMnC,SAEvB,kBAAC,EAAD,CACEkB,WAAc2B,KAAKV,MAAMC,KACzBpC,OAAU6C,KAAKV,MAAMnC,UAGzB,kBAAC,IAAD,CAAOoD,KAAK,iBAAiBC,OAAQR,KAAKP,iC,GArDtCgB,IAAMC,WEHxBC,IAASH,OACL,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFI,SAASC,eAAe,W","file":"static/js/main.6b66fe58.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Rick-and-Morty-Portal.699945e7.png\";","module.exports = __webpack_public_path__ + \"static/media/Logo.75509f2e.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Logo from '../images/Logo.png';\n\nconst Header = () => {\n    return(\n        <header className=\"header\">\n            <Link to=\"/\"><img src={Logo} alt=\"Rick and Morty logo\"/></Link>\n        </header>\n    );\n};\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Search = props => {\n\n    const getSearch = event => {\n        const value = event.target.value;\n        props.getSearch(value);\n    }\n\n    return(\n        <form className=\"search-form\">\n            <label className=\"search-form__label\" htmlFor=\"search\">Character search:</label>\n            <input className=\"search-form__search\" type=\"text\" id=\"search\" value={props.search} onChange={getSearch}/>\n        </form>\n    );\n};\n\nSearch.propTypes = {\n    search: PropTypes.string\n};\n\nexport default Search;","import React from 'react';\n\nconst Emoji = props => (\n    <span\n        className=\"emoji\"\n        role=\"img\"\n        aria-label={props.label ? props.label : \"\"}\n        aria-hidden={props.label ? \"false\" : \"true\"}\n    >\n        {props.symbol}\n    </span>\n);\nexport default Emoji;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Emoji from './Emoji';\n\nconst Character = props => {\n    return(\n        <Link to={`/character/${props.character.id}`}>\n            <li className=\"character\" key={props.character.id}>\n                <img src={props.character.image} alt={props.character.name}/>\n                <div className=\"character-name\">\n                    <h3>{props.character.name}</h3>\n                </div>\n                <div className=\"character-species\">     \n                    {props.character.species === 'Alien' ? <Emoji symbol=\"ðŸ‘½\" label=\"alien\"/> : <Emoji symbol=\"ðŸ‘«\" label=\"human\"/>}\n                </div>\n            </li>\n        </Link>\n    );\n};\n\nCharacter.propTypes = {\n    character: PropTypes.object\n};\n\nexport default Character;","import React from 'react';\nimport Character from './Character';\nimport PropTypes from 'prop-types';\n\nconst CharacterList = props => {\n    return(\n        <ul className = \"character-list\">\n            {props.characters\n            .filter(character => character.name.toLowerCase().includes(props.search.toLowerCase()))\n            .map(character => \n                <Character character = {character}/>\n            )}\n        </ul>\n    );\n};\n\nCharacter.propTypes = {\n    characters: PropTypes.array\n};\n\nexport default CharacterList;","import React from 'react';\nimport Emoji from './Emoji';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Portal from '../images/Rick-and-Morty-Portal.png'\n\nconst CharacterDetails = props => {\n    if(props.character === undefined){\n        return(\n            <div className=\"not-found\">\n                <p>There is nothing here. Go back home, please:</p>\n                <Link to=\"/\">\n                    <img class=\"nav-logo\" src={Portal} alt=\"home\"/>\n                </Link>\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"character__details\">\n                <div className=\"character__details-character\">\n                    <img src={props.character.image} alt={props.character.name}/>\n                    <div className=\"character__details-character__text\">\n                    <h3>{props.character.name}</h3>\n                        <ul className=\"detail-list\">\n                            <li>Status: {props.character.status === 'Alive' ? <Emoji symbol=\"ðŸ’š\" label=\"alive\"/> : <Emoji symbol=\"ðŸ’€\" label=\"dead\"/>}</li>\n                            <li>Species: {props.character.species === 'Alien' ? <Emoji symbol=\"ðŸ‘½\" label=\"alien\"/> : <Emoji symbol=\"ðŸ‘«\" label=\"human\"/>}</li>\n                            <li>Origin: {props.character.origin.name}</li>\n                            <li>Episodes: {props.character.episode.length}</li>\n                        </ul>\n                    </div>\n                </div>\n                <ul className=\"character__details-nav\">\n                    <li><Link to={`/character/${props.character.id - 1}`}><i className=\"fas fa-arrow-left\"></i></Link></li>\n                    <li><Link to=\"/\"><img class=\"nav-logo\" src={Portal} alt=\"home\"/></Link></li>\n                    <li><Link to={`/character/${props.character.id + 1}`}><i className=\"fas fa-arrow-right\"></i></Link></li>\n                </ul>\n            </div>\n        );\n    }\n};\n\nCharacterDetails.propTypes = {\n    character: PropTypes.object\n};\n\nexport default CharacterDetails;\n\n","import React from 'react';\nimport '../stylesheets/App.scss';\nimport { fetchCharacters } from '../services/Api'\nimport Header from './Header';\nimport Search from './Search';\nimport CharacterList from './CharacterList';\nimport { Switch, Route } from 'react-router-dom';\nimport CharacterDetails from './CharacterDetails';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      search: ''\n    };\n    this.getSearch = this.getSearch.bind(this);\n    this.renderCharacterDetails = this.renderCharacterDetails.bind(this);\n  };\n\n  componentDidMount(){\n    fetchCharacters()\n    .then(data => {\n      this.setState({\n        data: data.results\n      });\n    });\n  };\n\n  getSearch(value){\n    this.setState({\n      search: value\n    });\n  };\n\n  renderCharacterDetails(props){\n    const characterId = props.match.params.id;\n    const character = this.state.data.find(character => character.id === parseInt(characterId));\n    return(\n      <CharacterDetails character={character}/>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"stars\"></div>\n        <div className=\"twinkling\"></div>\n        <wrapper className=\"App__wrapper\">\n          <Header/>\n          <main className=\"main\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Search\n                  getSearch = {this.getSearch}\n                  search = {this.state.search}\n                />\n                <CharacterList\n                  characters = {this.state.data}\n                  search = {this.state.search}\n                />\n              </Route>\n              <Route path=\"/character/:id\" render={this.renderCharacterDetails}/>\n            </Switch>\n            \n          </main>\n        </wrapper>\n      </div>\n    );\n  };\n};\n\nexport default App; \n\n","const CHARACTERS = 'https://rickandmortyapi.com/api/character/';\n\nconst fetchCharacters = () => fetch(CHARACTERS).then(response => response.json());\n\nexport {fetchCharacters};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/App.scss';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n    document.getElementById('root')\n  );"],"sourceRoot":""}